
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Алиева Милена - студентка 1 курса бакалавриата Российского университета дружбы народов. Изучаю программирование, основы математики и иностранный язык. Также увлекаюсь волонтёрской деятельностью в своём родном городе, помогаю в организации различных мероприятий.\n","date":1682640000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1682640000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Алиева Милена - студентка 1 курса бакалавриата Российского университета дружбы народов. Изучаю программирование, основы математики и иностранный язык. Также увлекаюсь волонтёрской деятельностью в своём родном городе, помогаю в организации различных мероприятий.","tags":null,"title":"Алиева Милена","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Структура файловых систем В данной теме необходимо начать с файловой системы и её структуры. Файловая система – инструмент, позволяющий операционной системе и программам обращаться к нужным файлам и работать с ними. Основные функции файловой системы:\nФрагментация файлов и их распределение на носителе Поиск файла по запросу программ Участие в создании, чтении и удалении файлов Работа с атрибутами файлов: изменение названия, размера, времени последнего изменения, доступ к файлу и многое другое Каталогизация и организация файлов Структура служебных данных файловой системы, например Unix, на одном из разделов диска может состоять из четырех основных частей. В начале раздела находится суперблок, который содержит в себе описание файловой системы (так, там содержится информация о типе файловой системы, о размере файловой системы в блоках и так далее). Наличие второго блока позволяет обращаться к данным на диске как к полноценной файловой системе, а не как к некоторой последовательности блоков. Массив индексных узлов (третий блок) содержит список индексов, соответствующих файлам данной файловой системы, размер этого массива определяется при установке системы, а максимальное количество файлов, которые могут быть созданы в файловой системе, определяется числом доступных индексных узлов. В блоках данных хранятся файлы и директории.\nЧто такое директория? Иногда понятие директории путают с понятием обычного файла, но файл — это информационный блок, имеющий собственное имя, логическое представление и уникальный набор атрибутов. А директория - файл, имеющий вид таблицы и хранящий список входящих в него директорий и файлов, она служит для поддержания древовидной структуры файловой системы.\nОбзор операций над директориями Совокупность операций для управления директориями зависит от особенностей конкретной ОС. Рассмотрим в качестве примера некоторые системные вызовы, которые необходимы в работе: • Создание директории Для создания директорий в Linux используется команда mkdir • Удаление директории Для удаления можно использовать две команды: rmdir, если директория пуста и rm, если необходимо удалить указанную директорию вместе со всеми вложенными файлами и директориями • Открытие директории для последующего чтения С помощью команды ls мы можем просмотреть содержимое директории • Переименование Имена директорий можно менять, как и имена файлов. Для этого может быть использована команда mv, после которой указывается текущее наименование директории, а затем новое наименование. • Создание файла При создании нового файла необходимо добавить в каталог соответствующий элемент. С помощью команды touch можно создать новый файл в директории. • Удаление файла из директории Стоит отметить, что если удаляемый файл присутствует только в одной директории, то он в целом удаляется из файловой системы, в другом случае система ограничивается только удалением указанной записи. Для удаления файлов используется команда rm.\nМетоды реализации директории в файловой системе Для доступа к файлу ОС использует путь, который сообщил ей пользователь. Запись в директории связывает имя файла (или имя поддиректории) с блоками данных на диске В зависимости от способа выделения файлу блоков диска эта ссылка может быть номером первого блока или номером индексного узла. В любом случае обеспечивается связь символьного имени файла с данными на диске.\n","date":1682640000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682640000,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2023-04-28T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"Структура файловых систем В данной теме необходимо начать с файловой системы и её структуры. Файловая система – инструмент, позволяющий операционной системе и программам обращаться к нужным файлам и работать с ними.","tags":["Deep Learning"],"title":"Обзор операций над директориями и методов реализации директорий в файловых системах","type":"project"},{"authors":["Алиева Милена"],"categories":[],"content":"Цели Выполнить 12 лабораторную работу по ОС Выполнить четвертый и пятый этапы индивидуального проекта Подготовиться к контрольной по математической логике Выполнить задания по технологии программирования Как прошла моя неделя? Неделя прошла достаточно продуктивно. В понедельник были дистанционные занятия, я успела немного прогуляться, сделать домашнее задание по математическому анализу и приготовить вкусный ужин!! Даже успела выйти на пробежку и сделать растяжку! Во вторник я сделала 12 лабораторную работу по операционным системам, она мне показалась достаточно интересной. Затем я также успела выполнить пятый этап проекта по ОС. Планирую также успеть сделать и шестой этап прокта, а также начать выполнение внешнего курса. Сегодня вечером хочу успеть прогуляться и посмотреть свой любимый сериал!\nРезультаты Удалось выполнить все поставленные задачи!\n","date":1682640000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682640000,"objectID":"122591be03ff19b49a97c0378f58bb18","permalink":"https://example.com/post/post4/","publishdate":"2023-04-28T00:00:00Z","relpermalink":"/post/post4/","section":"post","summary":"Предлагаю ознакомиться с тем, что я успела сделать на прошлой неделе!","tags":[],"title":"Пост по прошедшей неделе","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Языки научного программирования Программирование часто упоминают в прикладном контексте. Кажется, с его помощью создают только мобильные приложения, интернет-системы и спецэффекты для кино. Но первоначально программирование предназначалось для решения научных задач. Кроме того, программирование само — наука, узнать о которой будет полезно тем, кто решил связать карьеру с компьютерной разработкой.\nНаучное программирование — высокоориентированный стиль программирования для научных расчетов. От других видов программирования его отличают предельные корректность и стабильность конечного продукта, строгое разделение научной и интерфейсной частей, индивидуальность алгоритмов, а также преобладание эффективности над универсальностью.\nНаучное программирование лежит в основе любого современного глобального исследования. Все передовые технологии — от квантовых компьютеров до космических программ — были бы невозможны без специалистов в области научного программирования, способных предоставить ученым надежный и точный инструмент для совершения открытий.\nРассмотрим несколько языков:\nBash Сценарии командной оболочки Unix, созданные Кеном Томпсоном в начале 1970-х годов, тесно связаны с языком программирования C. Bash — обновленная оболочка Unix — была впервые выпущена в конце 80-х годов и до сих пор активно разрабатывается. На Bash обычно пишутся сценарии конфигурации сервера, поэтому это хороший выбор для работы в современных облачных средах с контейнерным хранением и микросервисами. Скрипты командной оболочки используются достаточно часто, так что знание этого языка пригодится. Также стоит обратить внимание на zsh, который в настоящее время является оболочкой по умолчанию в macOS.\nCOBOL Один из старейших языков, используемых до сих пор, был создан Грейс Хоппер в конце 1950-х годов и предназначался для стандартизации разработки крупномасштабных бизнес-приложений на компьютерах. Блестящая концепция, которая до сих пор применяется в кроссплатформенных SDK. Через системы COBOL проходят невероятные 95% транзакций ATM, причем многие из этих устройств работают круглосуточно 365 дней в году. Такие поставщики устройств, как IBM, разрабатывают более мощные машины, предназначенные для COBOL, но продолжают обслуживать и обновлять существующие системы из-за затрат и рисков, связанных с их заменой. В ближайшее время COBOL никуда не уйдет. Это хороший выбор для тех, кто хочет работать с клиентами из финансовой сферы.\nC/C++ Эти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.\n","date":1682640000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682640000,"objectID":"71a8ca20b2be1cbde0f37651e3d34fb2","permalink":"https://example.com/post/programming-languages/","publishdate":"2023-04-28T00:00:00Z","relpermalink":"/post/programming-languages/","section":"post","summary":"Изучим данную тему!","tags":[],"title":"Языки научного программирования","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Оформление отчёта Отчёт - возможность лучше погрузиться в свою работу и лучше проанализировать её. У нас есть задача и мы фиксируем ее выполнение в форме отчета о проделанной работе. Во время обучения учащиеся часто составляют такой документ, он позволяет оценить, насколько качественно и как быстро выполнена задача, также заставляет задуматься о каких-то закономерностях. Также отчёты часто используются во время работы в различных компаниях, так как сотруднику необходимо отчитываться о проделанной работе. У отчёта может быть разное наполнение - всё зависит от требований, которые выдвигаются. Так, например, по такой дисциплине, как «Операционные системы» отчёт должен включать в себя: • Титульный лист с указанием номера лабораторной работы и ФИО студента. • Формулировка цели работы. • Описание результатов выполнения лабораторной работы: – описание выполняемого задания; – скриншоты (снимки экрана), фиксирующие выполнение заданий лабораторной работы; – комментарии и выводы по результатам выполнения заданий. • Описание результатов выполнения заданий для самостоятельной работы: – описание выполняемого задания; – скриншоты (снимки экрана), фиксирующие выполнение заданий; – комментарии и выводы по результатам выполнения заданий. • Выводы, согласованные с целью работы. Стоит также отметить, что отчёт должен быть выполнен в нескольких форматах(md, docx, pdf). Формат md позволяет сконвертировать сразу и docx, и pdf.\n","date":1682380800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682380800,"objectID":"1fadceff8bcbead2a8ac5f79e8e2ce74","permalink":"https://example.com/post/reports/","publishdate":"2023-04-25T00:00:00Z","relpermalink":"/post/reports/","section":"post","summary":"Изучим данную тему!","tags":[],"title":"Оформление отчёта","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Цели Выполнить 12 и 13 лабораторную работу по ОС Выполнить четвёртый этап индивидуального проекта Много гулять на выходных Как прошла моя неделя? Неделя прошла достаточно продукктивно и легко. С возвращением хорошей погоды я снова начала бегать, а также довольно активно провела выходные - много гуляла и смотрела разные улочки Москвы. Разобрала также на выходных тему по математическому анализу, сейчас мы изучаем там нахождение площади поверхности тела с помощью интеграла. Лабораторные работы по Операционнымм системам, которые я намечала сделать, оказались сделаны. Скоро я поеду в родной город на выходные, надеюсь, что также будет стоять хорошая погода, а еще мечтаю потискать своего рыжего кота!! В общем, хорошая погода определённо поднимает настроение и продуктивность, поэтому всё хорошо!\nРезультаты Удалось выполнить все поставленные задачи!\n","date":1682380800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682380800,"objectID":"d084acea3d1051f530a6486b095c70b4","permalink":"https://example.com/post/post3/","publishdate":"2023-04-25T00:00:00Z","relpermalink":"/post/post3/","section":"post","summary":"Предлагаю ознакомиться с тем, что я успела сделать на прошлой неделе!","tags":[],"title":"Пост по прошедшей неделе","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Цели Выполнить 9 лабораторную работу по ОС Выполнить третий этап индивидуального проекта Подготовиться к контрольной по математической логике Как прошла моя неделя? Неделя прошла достаточно продуктивно. В понедельник были дистанционные занятия, я успела немного прогуляться, сделать домашнее задание по математическому анализу и приготовить вкусный ужин!! Во вторник я сделала 9 лабораторную работу по операционным системам, она мне показалась достаточно интересной, там я работала с редактором emacs. Также вечером я подготовилась к контрольной работе по математической логике и разобрала последнюю тему по аналитической геометрии. В среду у нас была контрольная по математической логике, результатов пока у нас нет. Также в среду я начала делать третий этап индивидуального проекта. Вечером я немного прогулялась и посмотрела свой любимый сериал!\nРезультаты Удалось выполнить все поставленные задачи!\n","date":1680652800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680652800,"objectID":"0c6f6cbe96ac9b1239a629e09477d6d1","permalink":"https://example.com/post/post2/","publishdate":"2023-04-05T00:00:00Z","relpermalink":"/post/post2/","section":"post","summary":"Предлагаю ознакомиться с тем, что я успела сделать на прошлой неделе!","tags":[],"title":"Пост по прошедшей неделе","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Язык разметки Markdown Markdown — удобочитаемый язык разметки, который прозрачно конвертируется в HTML. Его можно открывать и изменять в любом редакторе текста. Широко используется для написания документаций и README-файлов. Markdown, или маркдаун, — это язык разметки для текстовых документов. Он позволяет создавать тексты без использования Word и других редакторов. Разметку можно прочитать и воспроизвести в любой системе или браузере. Маркдаун создал писатель и блогер Джон Грубер вместе с веб-активистом Аароном Шварцем. Они хотели придумать максимально простой и удобный язык разметки, с помощью которого текст можно перевести в красиво оформленный вид. При этом текст обязан оставаться читаемым даже без приведения к «красивому» виду. Таким и оказался Markdown. Его создали в 2004 году, но наибольшую популярность язык получил сейчас. Его поддерживают разнообразные платформы для блогов, сервисы создания заметок, CMS и даже мессенджеры.\nДля чего нужен маркдаун\n•\tБыстрое форматирование статьи для перевода в PDF или чтобы она просто выглядела красиво без лишних усилий. •\tВерстка текстового документа для размещения на сайте, но без применения HTML. •\tНаписание документации для кода. •\tСоставление заметок в личном цифровом блокноте. •\tНаписание красивых сообщений в мессенджерах\nВот некоторые правила:\nЧтобы создать заголовок, используйте знак #, например:\nThis is heading 1 ## This is heading 2 ### This is heading 3 #### This is heading 4 Чтобы задать для текста полужирное начертание, заключите его в двойные звездочки: This text is bold\nЧтобы задать для текста курсивное начертание, заключите его в одинарные звездочки: This text is italic.\nЧтобы задать для текста полужирное и курсивное начертание, заключите его в тройные звездочки: This is text is both bold and italic\nБлоки цитирования создаются с помощью символа \u0026gt;.\nMarkdown поддерживает как встраивание фрагментов кода в предложение, так и их размещение между предложениями в виде отдельных огражденных блоков. Огражденные блоки кода — это простой способ выделить синтаксис для фрагментов кода. Общий формат огражденных блоков кода: language your code goes in here\n","date":1680652800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680652800,"objectID":"bd238f54b82fdcd586f8f7e438599565","permalink":"https://example.com/post/markdown/","publishdate":"2023-04-05T00:00:00Z","relpermalink":"/post/markdown/","section":"post","summary":"Изучим данную тему!","tags":[],"title":"Язык разметки Markdown","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Цели Выполнить 5 и 6 лабораторные работы по ОС Выполнить домашнее задание по основам программирования Подготовиться к контрольной по математическому анализу Как прошла моя неделя? Эта неделя прошла достаточно легко. Я была в родном городе - в Твери, провела время с семьёй, мы отпраздновали 8 марта. Из учебных достижений - успела сделать 5 и 6 лабораторные работы по операционным системам, они оказалась несложными, я справилась относительно быстро. Ещё занималась программированием на с++, делала домашнее задание, которое было по теме односвязных списков и сдала его. Также на модуле по английскому языку у нас был праздник весны, я выступала со своей группой с песней happy nation, нам было довольно весело!!\nРезультаты Удалось выполнить все поставленные задачи!\n","date":1678924800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678924800,"objectID":"fe859c6266641600992fd6a0d6f11947","permalink":"https://example.com/post/post1/","publishdate":"2023-03-16T00:00:00Z","relpermalink":"/post/post1/","section":"post","summary":"Предлагаю вам ознакомиться с тем, что я успела сделать на прошлой неделе!","tags":[],"title":"Пост по прошедшей неделе","type":"post"},{"authors":["Алиева Милена"],"categories":[],"content":"Управление версиями git Системы контроля версий (Version Control System, VCS) применяются при работе нескольких человек над одним проектом. Обычно основное дерево проекта хранится в локальном или удалённом репозитории, к которому настроен доступ для участников проекта. При внесении изменений в содержание проекта система контроля версий позволяет их фиксировать, совмещать изменения, произведённые разными участниками проекта, производить откат к любой более ранней версии проекта, если это требуется. В классических системах контроля версий используется централизованная модель, предполагающая наличие единого репозитория для хранения файлов. Выполнение большинства функций по управлению версиями осуществляется специальным сервером. Участник проекта (пользователь) перед началом работы посредством определённых команд получает нужную ему версию файлов. После внесения изменений, пользователь размещает новую версию в хранилище. При этом предыдущие версии не удаляются из центрального хранилища и к ним можно вернуться в любой момент. Сервер может сохранять не полную версию изменённых файлов, а производить так называемую дельта-компрессию — сохранять только изменения между последовательными версиями, что позволяет уменьшить объём хранимых данных. Системы контроля версий поддерживают возможность отслеживания и разрешения конфликтов, которые могут возникнуть при работе нескольких человек над одним файлом. Можно объединить (слить) изменения, сделанные разными участниками (автоматически или вручную), вручную выбрать нужную версию, отменить изменения вовсе или заблокировать файлы для изменения. В зависимости от настроек блокировка не позволяет другим пользователям получить рабочую копию или препятствует изменению рабочей копии файла средствами файловой системы ОС, обеспечивая таким образом, привилегированный доступ только одному пользователю, работающему с файлом. Системы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить. В отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным. Среди классических VCS наиболее известны CVS, Subversion, а среди распределённых — Git, Bazaar, Mercurial. Принципы их работы схожи, отличаются они в основном синтаксисом используемых в работе команд.\n","date":1678924800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678924800,"objectID":"8d68bfbdd79bec3f34c3a46edc956e86","permalink":"https://example.com/post/git_versions/","publishdate":"2023-03-16T00:00:00Z","relpermalink":"/post/git_versions/","section":"post","summary":"Изучим данную тему!","tags":[],"title":"Управление версиями git","type":"post"},{"authors":["Алиева Милена"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Алиева Милена","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Алиева Милена","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]